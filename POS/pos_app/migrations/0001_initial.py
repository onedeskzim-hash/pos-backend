# Generated by Django 5.2.5 on 2025-08-20 10:28

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=200)),
                ('legal_name', models.CharField(max_length=200)),
                ('tax_number', models.CharField(blank=True, max_length=50)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('logo', models.ImageField(blank=True, upload_to='business/')),
                ('invoice_footer_text', models.TextField(blank=True)),
                ('receipt_footer_text', models.TextField(blank=True)),
                ('default_currency', models.CharField(default='USD', max_length=3)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('zimra_enabled', models.BooleanField(default=False)),
                ('zimra_tax_rate', models.DecimalField(decimal_places=2, default=15.0, max_digits=5)),
                ('zimra_api_url', models.URLField(default='https://api.zimra.co.zw/v1/')),
                ('zimra_client_id', models.CharField(blank=True, max_length=100)),
                ('zimra_client_secret', models.CharField(blank=True, max_length=200)),
                ('zimra_device_id', models.CharField(blank=True, max_length=50)),
                ('zimra_branch_code', models.CharField(blank=True, max_length=20)),
                ('zimra_terminal_id', models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('phone_no', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('national_id_no', models.CharField(blank=True, max_length=20)),
                ('account_code', models.CharField(blank=True, max_length=50, unique=True)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_terms_days', models.IntegerField(default=30)),
                ('outstanding_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DailySummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_transactions', models.IntegerField(default=0)),
                ('total_sales_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('cash_sales', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('card_sales', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('ecocash_sales', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('products_received', models.IntegerField(default=0)),
                ('products_sold', models.IntegerField(default=0)),
                ('products_to_collect', models.IntegerField(default=0)),
                ('products_to_pay', models.IntegerField(default=0)),
                ('total_expenses', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_losses', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('cost_of_goods_sold', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('gross_profit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('net_profit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('new_customers', models.IntegerField(default=0)),
                ('payments_received', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Expense Categories',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('contact_info', models.CharField(max_length=200)),
                ('address', models.TextField(blank=True)),
                ('account_number', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CashDrawer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('closing_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('opened_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('opened_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_type', models.CharField(choices=[('OPERATIONAL', 'Operational'), ('ADMINISTRATIVE', 'Administrative'), ('MARKETING', 'Marketing'), ('MAINTENANCE', 'Maintenance'), ('UTILITIES', 'Utilities'), ('RENT', 'Rent'), ('SALARIES', 'Salaries'), ('OTHER', 'Other')], max_length=15)),
                ('description', models.CharField(max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('receipt_reference', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurring_frequency', models.CharField(blank=True, max_length=20)),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_app.expensecategory')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_due', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_app.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('product_unique_code', models.CharField(blank=True, max_length=50, unique=True)),
                ('barcode', models.CharField(blank=True, max_length=50, unique=True)),
                ('unit', models.CharField(default='unit', max_length=20)),
                ('cost_price_avg', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('last_purchase_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('default_sale_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_group', models.CharField(choices=[('STANDARD_15', 'Standard 15%'), ('ZERO_RATED', 'Zero Rated'), ('EXEMPT', 'Exempt')], default='STANDARD_15', max_length=12)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('reorder_level', models.IntegerField(default=0)),
                ('low_stock_threshold', models.IntegerField(default=5)),
                ('is_serial_tracked', models.BooleanField(default=False)),
                ('warranty_months', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_app.category')),
            ],
        ),
        migrations.CreateModel(
            name='Loss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loss_type', models.CharField(choices=[('DAMAGE', 'Product Damage'), ('THEFT', 'Theft'), ('EXPIRY', 'Product Expiry'), ('WRITE_OFF', 'Write Off'), ('BAD_DEBT', 'Bad Debt'), ('OTHER', 'Other')], max_length=15)),
                ('description', models.CharField(max_length=200)),
                ('quantity', models.IntegerField(default=0)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_loss_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.customer')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProfitLossReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_sales', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_tax_collected', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('cost_of_goods_sold', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_expenses', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_losses', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('gross_profit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('net_profit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('profit_margin_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reseller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('contact_info', models.CharField(max_length=200)),
                ('settlement_mode', models.CharField(choices=[('PRICE_DIFFERENCE', 'Price Difference'), ('PERCENT_COMMISSION', 'Percentage Commission')], default='PRICE_DIFFERENCE', max_length=20)),
                ('commission_rate_pct', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bank_details', models.TextField(blank=True)),
                ('payment_terms_days', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('ECOCASH', 'EcoCash'), ('ONE_MONEY', 'One Money'), ('MUKURU', 'Mukuru'), ('INBUCKS', 'Inbucks'), ('MAMA_MONEY', 'Mama Money'), ('BANK', 'Bank Transfer'), ('CARD', 'Card'), ('OTHER', 'Other')], max_length=15)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.customer')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.invoice')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reseller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.reseller')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('STOCK_ALERT', 'Stock Alert'), ('PAYMENT_DUE', 'Payment Due'), ('LOW_STOCK', 'Low Stock'), ('GENERAL', 'General')], max_length=15)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.customer')),
                ('related_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.product')),
                ('related_reseller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.reseller')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ResellerSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dealership_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reseller_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('profit_margin', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_app.product')),
                ('reseller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_app.reseller')),
            ],
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=100)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('MANAGER', 'Manager'), ('CASHIER', 'Cashier')], max_length=10)),
                ('can_override_price', models.BooleanField(default=False)),
                ('can_discount', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('RECEIPT', 'Receipt'), ('SALE', 'Sale'), ('ADJUSTMENT_IN', 'Adjustment In'), ('ADJUSTMENT_OUT', 'Adjustment Out'), ('RETURN_IN', 'Return In'), ('RETURN_OUT', 'Return Out')], max_length=15)),
                ('quantity', models.IntegerField()),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reference_doc_type', models.CharField(blank=True, max_length=20)),
                ('reference_doc_id', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('reason', models.CharField(choices=[('SALE', 'Sale'), ('PURCHASE', 'Purchase'), ('DAMAGE', 'Damage'), ('THEFT', 'Theft'), ('COUNT_DIFFERENCE', 'Count Difference'), ('RETURN', 'Return'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_app.product')),
            ],
        ),
        migrations.CreateModel(
            name='StockTake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counted_quantity', models.IntegerField()),
                ('system_quantity', models.IntegerField()),
                ('difference', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_app.product')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('RECEIVED', 'Product Received'), ('SOLD', 'Product Sold'), ('PAID_TO_COLLECT', 'Paid but to be Collected'), ('COLLECTED_TO_PAY', 'Collected but to Pay Later')], max_length=20)),
                ('dealership_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_taxed', models.BooleanField(default=False)),
                ('zimra_receipt_no', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_app.product')),
                ('reseller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.reseller')),
                ('sale_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(max_length=50, unique=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('ECOCASH', 'EcoCash'), ('ONE_MONEY', 'One Money'), ('MUKURU', 'Mukuru'), ('INBUCKS', 'Inbucks'), ('MAMA_MONEY', 'Mama Money'), ('BANK', 'Bank Transfer'), ('CARD', 'Card'), ('OTHER', 'Other')], max_length=15)),
                ('printed_at', models.DateTimeField(auto_now_add=True)),
                ('zimra_receipt_no', models.CharField(blank=True, max_length=100)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pos_app.customer')),
                ('printed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_app.transaction')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='transactions',
            field=models.ManyToManyField(to='pos_app.transaction'),
        ),
    ]
